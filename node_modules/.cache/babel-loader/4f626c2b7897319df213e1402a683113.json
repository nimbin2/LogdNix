{"ast":null,"code":"var _jsxFileName = \"/srv/http/fusion-project/scc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const options = [{\n    id: 1,\n    name: \"Mails\",\n    blocks: [{\n      position: [1]\n    }, {\n      id: 1,\n      name: \"FAQ\"\n    }, {\n      id: 2,\n      name: \"Antwortblöcke\"\n    }, {\n      id: 3,\n      name: \"Newsletter\"\n    }],\n    order: [1, 2, 3]\n  }, {\n    id: 2,\n    name: \"Positionen\",\n    blocks: [{\n      position: [2]\n    }, {\n      id: 1,\n      name: \"Kasse\",\n      blocks: [{\n        position: [2, 1]\n      }, {\n        id: 1,\n        name: \"Check-In\"\n      }, {\n        id: 2,\n        name: \"Check-Out\"\n      }],\n      order: [1, 2]\n    }, {\n      id: 2,\n      name: \"Fenster\",\n      blocks: [{\n        position: [2, 2]\n      }, {\n        id: 1,\n        name: \"Check-In Pre\"\n      }, {\n        id: 2,\n        name: \"Check-In Runner-Zettel\"\n      }, {\n        id: 3,\n        name: \"Routen drucken\"\n      }, {\n        id: 4,\n        name: \"Packen\"\n      }],\n      order: [1, 2, 3, 4]\n    }, {\n      id: 3,\n      name: \"Runner\",\n      blocks: [{\n        position: [2, 3]\n      }, {\n        id: 1,\n        name: \"Vorbereitung\"\n      }, {\n        id: 2,\n        name: \"Routen\"\n      }],\n      order: [1, 2]\n    }],\n    order: [1, 2, 3]\n  }, {\n    id: 3,\n    name: \"Schichtplan\",\n    blocks: [{\n      position: [3]\n    }, {\n      id: 1,\n      name: \"Schichten ändern\"\n    }, {\n      id: 2,\n      name: \"Schichten anlegen\"\n    }, {\n      id: 3,\n      name: \"Schichtplan\"\n    }],\n    order: [1, 2, 3]\n  }, {\n    id: 4,\n    name: \"Ordner\"\n  }];\n  const [renderBlock, statusRenderBlock] = useState([]);\n  const [positionNav, statusPositionNav] = useState([0]);\n  const [oldPositionNav, statusOldPositionNav] = useState([0]);\n\n  const getNavPosition = (block, i) => {\n    console.log(block[0].position, block[i]);\n    positionNav === [0] && console.log(positionNav);\n    block[0].position ? statusPositionNav(block[0].position) : statusPositionNav([0]);\n    console.log(positionNav);\n  };\n\n  const iterateBlocks = blocks => /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: Object.keys(blocks).map(i => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: blocks[i].id && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => statusRenderBlock(blocks[i]),\n          children: blocks[i].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getNavPosition(blocks, i),\n          children: \"Get IDs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this), blocks[i].blocks && iterateBlocks(blocks[i].blocks)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n\n  const renderSidebar = blocks => /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: Object.keys(blocks).map(i => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [blocks[i].position, blocks[i].id && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => statusRenderBlock(blocks[i]),\n          children: blocks[i].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getNavPosition(blocks, i),\n          children: \"Get IDs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }, this), blocks[i].blocks && renderSidebar(blocks[i].blocks)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"SCC\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Sidebar\",\n      children: //iterateBlocks(options)\n      positionNav && renderSidebar(options)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Content\",\n      children: [positionNav, renderBlock && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [renderBlock.name, renderBlock.blocks && iterateBlocks(renderBlock.blocks)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"j9RLMUectyVKY0To38XLKjZrs9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/srv/http/fusion-project/scc/src/App.js"],"names":["React","useState","Fragment","App","options","id","name","blocks","position","order","renderBlock","statusRenderBlock","positionNav","statusPositionNav","oldPositionNav","statusOldPositionNav","getNavPosition","block","i","console","log","iterateBlocks","Object","keys","map","renderSidebar"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from \"react\";\nimport './App.css';\n\n\nfunction App() {\n    const options = [\n        {\n            id: 1,\n            name: \"Mails\",\n            blocks: [\n                {\n                    position: [1]\n                },{\n                    id: 1,\n                    name: \"FAQ\"\n                }, {\n                    id: 2,\n                    name: \"Antwortblöcke\"\n                }, {\n                    id: 3,\n                    name: \"Newsletter\"\n                }\n            ],\n            order: [1, 2, 3]\n        }, {\n            id: 2,\n            name: \"Positionen\",\n            blocks: [\n                {\n                    position: [2]\n                },{\n                    id: 1,\n                    name: \"Kasse\",\n                    blocks: [\n                        {\n                            position: [2, 1]\n                        },{\n                            id: 1,\n                            name: \"Check-In\"\n                        }, {\n                            id: 2,\n                            name: \"Check-Out\"\n                        }\n                    ],\n                    order: [1, 2]\n                }, {\n                    id: 2,\n                    name: \"Fenster\",\n                    blocks: [\n                        {\n                            position: [2, 2]\n                        },{\n                            id: 1,\n                            name: \"Check-In Pre\"\n                        }, {\n                            id: 2,\n                            name: \"Check-In Runner-Zettel\"\n                        }, {\n                            id: 3,\n                            name: \"Routen drucken\"\n                        }, {\n                            id: 4,\n                            name: \"Packen\"\n                        }\n                    ],\n                    order: [1, 2, 3, 4]\n                }, {\n                    id: 3,\n                    name: \"Runner\",\n                    blocks: [\n                        {\n                            position: [2, 3]\n                        },{\n                            id: 1,\n                            name: \"Vorbereitung\"\n                        }, {\n                            id: 2,\n                            name: \"Routen\"\n                        }\n                    ],\n                    order: [1, 2,]\n                }\n            ],\n            order: [1, 2, 3]\n        }, {\n            id: 3,\n            name: \"Schichtplan\",\n            blocks: [\n                {\n                    position: [3]\n                },{\n                    id: 1,\n                    name: \"Schichten ändern\",\n                }, {\n                    id: 2,\n                    name: \"Schichten anlegen\",\n                }, {\n                    id: 3,\n                    name: \"Schichtplan\"\n                }\n            ],\n            order: [1, 2, 3]\n        }, {\n            id: 4,\n            name: \"Ordner\"\n        }\n    ]\n    const [renderBlock, statusRenderBlock] = useState([]);\n    const [positionNav, statusPositionNav] = useState([0]);\n    const [oldPositionNav, statusOldPositionNav] = useState([0]);\n\n    const getNavPosition = (block, i) => {\n        console.log(block[0].position, block[i])\n        positionNav === [0] && console.log(positionNav)\n        block[0].position ? statusPositionNav(block[0].position) : statusPositionNav([0])\n        console.log(positionNav)\n    }\n\n    const iterateBlocks = (blocks) => (\n        <ul>\n            {\n                Object.keys(blocks).map((i) => (\n                    <Fragment key={i}>\n                        { blocks[i].id && (\n                            <li className=\"block\">\n                                <button onClick={() => statusRenderBlock(blocks[i])}>{blocks[i].name}</button>\n                                <button onClick={() => getNavPosition(blocks, i)}>Get IDs</button>\n                                { blocks[i].blocks && iterateBlocks(blocks[i].blocks)}\n                            </li>\n                        )}\n                    </Fragment>\n                ))\n            }\n        </ul>\n    )\n\n    const renderSidebar = (blocks) => (\n        <ul>\n            {\n                Object.keys(blocks).map((i) => (\n                    <React.Fragment key={i}>\n                        { blocks[i].position}\n                        { blocks[i].id && (\n                            <li className=\"block\">\n                                <button onClick={() => statusRenderBlock(blocks[i])}>{blocks[i].name}</button>\n                                <button onClick={() => getNavPosition(blocks, i)}>Get IDs</button>\n                                { blocks[i].blocks && renderSidebar(blocks[i].blocks)}\n                            </li>\n                        )}\n                    </React.Fragment>\n                ))\n            }\n        </ul>\n    )\n\n    return (\n        <div id=\"SCC\">\n            <div id=\"Sidebar\">\n                {\n                    //iterateBlocks(options)\n                    positionNav && renderSidebar(options)\n                }\n            </div>\n            <div id=\"Content\">\n                {positionNav}\n                {renderBlock && (\n                    <div>\n                        {renderBlock.name}\n                        {renderBlock.blocks && iterateBlocks(renderBlock.blocks)}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}